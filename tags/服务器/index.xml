<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>服务器 on G-Hung的博客</title><link>https://blog.yzyy.de/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><description>Recent content in 服务器 on G-Hung的博客</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 28 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.yzyy.de/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>如何让两个 docker-compose 项目中的容器互相通信</title><link>https://blog.yzyy.de/post/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%B8%A4%E4%B8%AA-docker-compose-%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%AE%B9%E5%99%A8%E4%BA%92%E7%9B%B8%E9%80%9A%E4%BF%A1/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.yzyy.de/post/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%B8%A4%E4%B8%AA-docker-compose-%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%AE%B9%E5%99%A8%E4%BA%92%E7%9B%B8%E9%80%9A%E4%BF%A1/</guid><description>&lt;p&gt;由于部署了很多中转代理服务以及各种客户端，常常会遇到多个docker容器间通信的问题。例如，为了解决New-API以及OpenWebUI两个容器间的通信，减少API时延，之前都是采用放在同一个docker-compose中管理，在内部创建一个网络并接入。&lt;/p&gt;
&lt;p&gt;这样也可以实现使用&lt;code&gt;http://newapi:3000/v1&lt;/code&gt;的优雅方式访问。&lt;/p&gt;
&lt;p&gt;随着docker-compose文件的越来越长，维护难度越来越高，越来越像一个大杂烩。我又学习了另外一种创建外部网络的方式。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;思路是：我们创建一个独立于任何 docker-compose 文件的共享网络，然后让两个不同的 docker-compose 项目都连接到这个网络上。&lt;/p&gt;
&lt;h2 class="heading" id="创建共享网络"&gt;
 创建共享网络
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%ba%e5%85%b1%e4%ba%ab%e7%bd%91%e7%bb%9c"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;运行以下命令来创建一个新的桥接网络。我们就叫它 shared-net。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;docker network create shared-net
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个网络现在独立存在，不受任何 docker-compose 文件的 up 或 down 命令影响。&lt;/p&gt;
&lt;h2 class="heading" id="修改不同容器所在的-docker-composeyml"&gt;
 修改不同容器所在的 docker-compose.yml
 &lt;a class="anchor" href="#%e4%bf%ae%e6%94%b9%e4%b8%8d%e5%90%8c%e5%ae%b9%e5%99%a8%e6%89%80%e5%9c%a8%e7%9a%84-docker-composeyml"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;编辑容器的 docker-compose.yml 文件，让它连接到我们刚刚创建的 shared-net。&lt;/p&gt;
&lt;p&gt;只需要编辑两个地方：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-yml" data-lang="yml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 例如在 new-api 项目的 docker-compose.yml 文件中&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;services:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; new-api:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# ... (它所有现有的配置都保持不变) ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; networks: &lt;span style="color:#888;font-style:italic"&gt;# 1.给 new-api 服务添加这个 networks 块&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - some-other-network &lt;span style="color:#888;font-style:italic"&gt;# 它可能已经连接了其他网络，保留它们&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - shared-net &lt;span style="color:#888;font-style:italic"&gt;# 额外连接到我们的共享网络&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 2. 在文件末尾声明这个网络是外部的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;networks:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; some-other-network:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; shared-net:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; external: &lt;span style="font-weight:bold;text-decoration:underline"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;之后，重启容器。&lt;/p&gt;
&lt;p&gt;现在，因为不同容器都在 shared-net 这个网络里，它们可以通过容器名直接通信。要访问 「new-api」 ，地址应该填写：&lt;code&gt;http://new-api:3000&lt;/code&gt;。&lt;/p&gt;</description></item><item><title>新购一台8GB的VDS与搬家</title><link>https://blog.yzyy.de/post/%E6%96%B0%E8%B4%AD%E4%B8%80%E5%8F%B08gb%E7%9A%84vds/</link><pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.yzyy.de/post/%E6%96%B0%E8%B4%AD%E4%B8%80%E5%8F%B08gb%E7%9A%84vds/</guid><description>&lt;p&gt;在7月8日，人称“小阿里”的云服务器提供商「ClawCloud」宣布下线支持中国优化线路的香港服务器。这个公告中还提到了三个赔偿方案，其中两个为不同的退款方案，这里重点关注方案二：可以免费迁移到新加坡或日本节点，并且**原本机器的内存容量还会直接翻倍。&lt;/p&gt;
&lt;p&gt;这就导致了市场上出现了2核8GB的线路良好的新加坡\日本机器，并且价格为4$/m，有没有很心动，我反正是心动了。&lt;/p&gt;
&lt;p&gt;回想起那夜远程开发使用claude code内存爆炸，狼狈重启。那夜为了安装OpenWebUI，一口气开了2g的swap。畏畏缩缩不敢使用动态博客、不敢使用1panel等运维面板。怕了真怕了，😭狼狈的我含泪溢价一百块收下一台机器，只希望能用的长久吧。&lt;/p&gt;
&lt;p&gt;以下记录一下我拿到一台新机器会做什么以及迁移过程。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 class="heading" id="安全"&gt;
 安全
 &lt;a class="anchor" href="#%e5%ae%89%e5%85%a8"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;最重要的当然是安全，之前已经给出了服务器的安全论，请看&lt;a href="https://blog.yzyy.de/explore/%E6%9C%8D%E5%8A%A1%E5%99%A8/vps%E5%9F%BA%E6%9C%AC%E5%AE%89%E5%85%A8%E6%8E%AA%E6%96%BD/"&gt;VPS基础安全配置实践指南&lt;/a&gt;。&lt;/p&gt;
&lt;h2 class="heading" id="安装docker"&gt;
 安装docker
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85docker"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;因为多数服务是运行在docker上的，安装docker &amp;amp; docker compose是必不可少的。&lt;/p&gt;
&lt;h2 class="heading" id="ssl证书"&gt;
 SSL证书
 &lt;a class="anchor" href="#ssl%e8%af%81%e4%b9%a6"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;不是简单地迁移已有证书就行了，还要迁移配置好的自动续签服务，经过查看在一台机器上有四个域名的自动续签服务，但是我准备瘦身一下，有些域名快到期了。












&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="" src="https://webp.050612.xyz/2025/07/certificates.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 class="heading" id="自动续签改进后的方案"&gt;
 自动续签改进后的方案
 &lt;a class="anchor" href="#%e8%87%aa%e5%8a%a8%e7%bb%ad%e7%ad%be%e6%94%b9%e8%bf%9b%e5%90%8e%e7%9a%84%e6%96%b9%e6%a1%88"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;发现之前的多个域名的自动续签管理十分繁琐，与AI交流后获得了一个更为简洁的可行的方案，简化了操作与配置。&lt;/p&gt;
&lt;h4 class="heading" id="cloudflare-api"&gt;
 Cloudflare API
 &lt;a class="anchor" href="#cloudflare-api"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;使用 Cloudflare DNS 模式需要准备:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Account ID&lt;/li&gt;
&lt;li&gt;API Token&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 class="heading" id="获取-account-id"&gt;
 获取 Account ID
 &lt;a class="anchor" href="#%e8%8e%b7%e5%8f%96-account-id"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;这两种 ID 直接在 Overview 页就能找到。&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="cloudflare_account_id" src="https://webp.050612.xyz/2025/07/cloudflare_account_id.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h5 class="heading" id="获取-api-token"&gt;
 获取 API Token
 &lt;a class="anchor" href="#%e8%8e%b7%e5%8f%96-api-token"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;Overview 页点击 &lt;code&gt;获取您的 API 令牌&lt;/code&gt; 进入 API Tokens 页。&lt;/p&gt;
&lt;p&gt;点击 API Tokens 项旁边 &lt;code&gt;创建令牌&lt;/code&gt; 按钮，接着选择 &lt;code&gt;编辑区域 DNS&lt;/code&gt; 的模板，点击 &lt;code&gt;使用模板&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="image" src="https://webp.050612.xyz/2025/02/e15d8a0a1de821faab5355e610b581016975b974_2_690x265.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="image" src="https://webp.050612.xyz/2025/02/42f87595d27a6fb3ed1fe329934517f5416920c6_2_690x210.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;区域资源&lt;/code&gt; 里选择需要签发的域名，多个域名选择多个。不建议选择全部的域名，**最小权限原则。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;客户端 IP 地址筛选&lt;/code&gt; 里建议写下 acme.sh 所在的主机做为白名单，需要注意，如果服务器有 ipv6 地址，则也需要添加，因为有可能会 ipv6 优先访问。&lt;/p&gt;
&lt;p&gt;击 &lt;code&gt;继续以显示摘要&lt;/code&gt; , 确认没问题后最后点击 &lt;code&gt;创建令牌&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="image" src="https://webp.050612.xyz/2025/02/e88966d6049c27c31c632f9471ec1b79be287b59_2_510x499.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;此时就会出现一个 Token,，即 CF_Token，拷贝备用。&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="image" src="https://webp.050612.xyz/2025/02/ca6093ea6bf83325809ea6179d4239ae2c9818cc_2_690x404.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h5 class="heading" id="注意"&gt;
 注意
 &lt;a class="anchor" href="#%e6%b3%a8%e6%84%8f"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;注意新增域名时，需要更改API Token所包含的域名&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意有多台机器时，需要新增机器的IP到白名单&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="update_cf_api_token" src="https://webp.050612.xyz/2025/02/update_cf_api_token.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;













&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="cf-api-token-ip" src="https://webp.050612.xyz/2025/02/cf-api-token-ip.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 class="heading" id="一个完整的演示"&gt;
 一个完整的演示
 &lt;a class="anchor" href="#%e4%b8%80%e4%b8%aa%e5%ae%8c%e6%95%b4%e7%9a%84%e6%bc%94%e7%a4%ba"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;获取到了以上两个token即可开始操作。&lt;/p&gt;
&lt;p&gt;为了使整个流程更加清晰（&lt;del&gt;方便自己操作&lt;/del&gt;），这里贴一个自己平时使用 acme.sh 申请证书的完整流程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;申请方式：DNS 认证（使用 Cloudflare API）&lt;/li&gt;
&lt;li&gt;申请证书 CA：Let’s Encrypt&lt;/li&gt;
&lt;li&gt;申请证书类型：RSA + ECC 两个通配符证书&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后续申请证书的命令，都是在 root 用户下执行的，请先使用 &lt;code&gt;su&lt;/code&gt; 切换到 root 用户。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 进入root用户&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;su
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 安装 acme.sh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl https://get.acme.sh | sh
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 刷新 shell 变量配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;source&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 导入 Cloudflare API Token&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;export&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;CF_Token&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;export&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;CF_Account_ID&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 设置默认 CA 为 Let&amp;#39;s Encrypt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --set-default-ca --server letsencrypt
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 签发 RSA 证书&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --issue --dns dns_cf -d xxx.xyz -d *.xxx.xyz --keylength 2048
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 安装 RSA 证书到指定路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --install-cert -d domain.tld &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--key-file /path/to/ssl/domain.tld_private.key &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--fullchain-file /path/to/ssl/domain.tld_chain.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--reloadcmd &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;service nginx reload&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 签发 ECC 证书，若不需要，跳过即可&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --issue --dns dns_cf -d domain.tld -d *.domain.tld --keylength ec-256
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 安装 ECC 证书到指定路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --install-cert -d domain.tld --ecc &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--key-file /path/to/ssl/ecc_domain.tld_private.key &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--fullchain-file /path/to/ssl/ecc_domain.tld_chain.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--capath /path/to/ssl/ecc_domain.tld_ca.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--reloadcmd &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;service nginx reload&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 至此证书安装完毕&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 下面是同一台主机申请第二个域名证书&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;###############################第二个域名#####################################################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 签发 RSA 证书&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --issue --dns dns_cf -d xxx.xyz -d *.xxx.xyz --keylength 2048
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 安装 RSA 证书到指定路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --config-home /root/.acme2 &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--install-cert -d domain.tld &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--key-file /path/to/ssl/domain.tld_private.key &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--fullchain-file /path/to/ssl/domain.tld_chain.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--reloadcmd &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;service nginx reload&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 签发 ECC 证书，若不需要，跳过即可&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --config-home /root/.acme2 --issue --dns dns_cf -d domain.tld -d *.domain.tld --keylength ec-256
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 安装 ECC 证书到指定路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --config-home /root/.acme2 &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--install-cert -d domain.tld --ecc &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--key-file /path/to/ssl/ecc_domain.tld_private.key &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--fullchain-file /path/to/ssl/ecc_domain.tld_chain.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--capath /path/to/ssl/ecc_domain.tld_ca.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--reloadcmd &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;service nginx reload&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;检查cron定时任务是否已经成功创建&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;crontab -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果有两个以上的域名或者新增域名，
只需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在Cloudflare的「API Token」管理中，新增API Token所包含的域名&lt;/li&gt;
&lt;li&gt;签发新域名的证书并安装到指定位置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;acme.sh会检查所管理的所有域名的证书的到期时间，如果需要续签，则会执行续签操作并安装导致订位置，实现证书的自动续签。一劳永逸的操作。&lt;/p&gt;
&lt;h2 class="heading" id="迁移服务"&gt;
 迁移服务
 &lt;a class="anchor" href="#%e8%bf%81%e7%a7%bb%e6%9c%8d%e5%8a%a1"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;到了最复杂的一个环节了，即使运行在docker的服务，每个也要迁移volumes、nginx配置，开干！💪正好凑这个机会统计一下我运行了哪些服务。&lt;/p&gt;
&lt;h3 class="heading" id="openwebui--newapi"&gt;
 OpenWebUI + NewAPI
 &lt;a class="anchor" href="#openwebui--newapi"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打包持久化数据，其中NewAPI的MySQL使用了Docker的命名卷&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;######## 打包OpenWebUI和NewAPI的持久化数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;tar -czvf data.tar.gz ./openwebui ./newapi
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;######## 打包newapi MySQL数据卷 ###########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 查找卷的物理路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;docker volume inspect [项目名]_mysql_data
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 在输出中找到 &amp;#34;Mountpoint&amp;#34;: &amp;#34;/var/lib/docker/volumes/[项目名]_mysql_data/_data&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo tar -czvf ~/mysql_volume.tar.gz /var/lib/docker/volumes/[项目名]_mysql_data/_data
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="2"&gt;
&lt;li&gt;使用SFTP功能传输到新机器&lt;/li&gt;
&lt;li&gt;在新机器上解压&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-BASH" data-lang="BASH"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;######## 解压OpenWebUI和NewAPI的持久化数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo tar -xzvf data.tar.gz -C ./
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;######## 解压newapi MySQL数据卷 ###########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 手动创建目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo mkdir -p /var/lib/docker/volumes/[项目名]_mysql_data/_data
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 解压文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo tar -xzvf ~/mysql_volume.tar.gz -C /var/lib/docker/volumes/[项目名]_mysql_data/_data
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 修复文件权限&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo chown -R 999:999 /var/lib/docker/volumes/[项目名]_mysql_data/_data
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="4"&gt;
&lt;li&gt;配置nginx&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;直接把旧机器上的nginx打包上传到新机上，操作只需要建立site-available与site-enable的软连接&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ln -s /etc/nginx/sites-available/api.vtofun.me /etc/nginx/sites-enabled/api.vtofun.me
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;绷不住了，第一次搬家十分乃至万分不顺利，从七点搬到十一点半还没搬完。搬家太累了😭&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 class="heading" id="openlist"&gt;
 OpenList
 &lt;a class="anchor" href="#openlist"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;想到前段时间的alist的暴雷商业化，我还是把镜像换成OpenList吧。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;docker镜像变更&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-yml" data-lang="yml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;version: &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;3.3&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;services:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; alist:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; image: &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;openlistteam/openlist:latest&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; container_name: alist
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; volumes:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;./data:/opt/alist/data&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;127.0.0.1:1259:5244&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; environment:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - PUID=0
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - PGID=0
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - UMASK=022
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; restart: unless-stopped
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="2"&gt;
&lt;li&gt;配置nginx&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ln -s /etc/nginx/sites-available/api.vtofun.me /etc/nginx/sites-enabled/api.vtofun.me
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="3"&gt;
&lt;li&gt;注意打开admin用户的webdav的读权限。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 class="heading" id="sub-store"&gt;
 sub-store
 &lt;a class="anchor" href="#sub-store"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;很好用的代理配置管理软件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ln -s /etc/nginx/sites-available/substore /etc/nginx/sites-enabled/substore
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl restart nginx.service 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 class="heading" id="gemini-balance"&gt;
 Gemini-balance
 &lt;a class="anchor" href="#gemini-balance"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;一个很好用的gemini代理服务，支持多KEY，失败重试等。&lt;/p&gt;
&lt;p&gt;由于之前服务器为香港，而AI服务一般都不支持中国大陆以及香港，所以之前gemini-balance服务部署在一个小机器上。正好趁着这次搬家搬到一起。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;docker-compose.yml文件，通过.env使用和New-API同一个MySQL，避免起两个MySQL服务，造成资源浪费。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-yml" data-lang="yml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# Gemini代理池&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; gemini-balance:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; image: ghcr.io/snailyp/gemini-balance:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; container_name: gemini-balance
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; restart: unless-stopped
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;127.0.0.1:1260:8000&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; env_file:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - .env &lt;span style="color:#888;font-style:italic"&gt;# 同样使用 .env 文件管理配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; networks:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - app_network &lt;span style="color:#888;font-style:italic"&gt;# 加入统一网络&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; depends_on:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; mysql:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; condition: service_healthy &lt;span style="color:#888;font-style:italic"&gt;# 依赖于我们统一的 mysql 服务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; healthcheck:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; test: [&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;CMD-SHELL&amp;#34;&lt;/span&gt;, &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;python -c \&amp;#34;import requests; exit(0) if requests.get(&amp;#39;http://localhost:8000/health&amp;#39;).status_code == 200 else exit(1)\&amp;#34;&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; interval: 30s
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; timeout: 5s
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; retries: 3
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; start_period: 10s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;nginx配置文件没有什么特殊的，反代一下即可。&lt;/p&gt;
&lt;h3 class="heading" id="pdfmathtranslate"&gt;
 PDFMathTranslate
 &lt;a class="anchor" href="#pdfmathtranslate"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;一个基于 AI 完整保留排版的 PDF 文档全文双语翻译，支持 Google/DeepL/Ollama/OpenAI 等服务。&lt;/p&gt;
&lt;h2 class="heading" id="安装新服务"&gt;
 安装新服务
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85%e6%96%b0%e6%9c%8d%e5%8a%a1"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;h3 class="heading" id="1panel"&gt;
 1Panel
 &lt;a class="anchor" href="#1panel"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;一键安装的命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;bash -c &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;&lt;/span&gt;&lt;span style="font-weight:bold;text-decoration:underline"&gt;$(&lt;/span&gt;curl -sSL https://resource.fit2cloud.com/1panel/package/v2/quick_start.sh&lt;span style="font-weight:bold;text-decoration:underline"&gt;)&lt;/span&gt;&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="" src="https://webp.050612.xyz/2025/07/20250718151202885.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2025-07-18日更新
1panel 面板bug好多，使用nginx反代面板本身实现https访问，一直卡在loading。不知是不是我操作有问题。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;似乎遇见问题的情况有很多。












&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="" src="https://webp.050612.xyz/2025/07/20250718161106071.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 class="heading" id="问题定位"&gt;
 问题定位
 &lt;a class="anchor" href="#%e9%97%ae%e9%a2%98%e5%ae%9a%e4%bd%8d"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;目前使用ip:port方式可以正常访问，使用域名无法访问，可以初步判断为nginx反代的配置问题。&lt;/p&gt;
&lt;h4 class="heading" id="问题解决"&gt;
 问题解决
 &lt;a class="anchor" href="#%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;贴上一份可以正常工作的nginx配置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-nginx" data-lang="nginx"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;text-decoration:underline"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;listen&lt;/span&gt; 80;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;server_name&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;xxx&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;return&lt;/span&gt; 301 &lt;span style="color:#666;font-style:italic"&gt;https://&lt;/span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$server_name$request_uri&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;text-decoration:underline"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;listen&lt;/span&gt; 443 &lt;span style="color:#666;font-style:italic"&gt;ssl&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;http2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;server_name&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;xxx&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_certificate&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;/etc/ssl/certs/xxx&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_certificate_key&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;/etc/ssl/private/xxx&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_session_timeout&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;1d&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_session_cache&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;shared:MozSSL:10m&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_ciphers&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_prefer_server_ciphers&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;off&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_protocols&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;TLSv1.1&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;TLSv1.2&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;TLSv1.3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;add_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;Strict-Transport-Security&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;max-age=63072000&amp;#34;&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;always&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;client_max_body_size&lt;/span&gt; 500m;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;location&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_pass&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;http://xxxx:1255&lt;/span&gt;; &lt;span style="color:#888;font-style:italic"&gt;# xxx替换为内部访问地址
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_http_version&lt;/span&gt; 1&lt;span style="color:#666;font-style:italic"&gt;.1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# WebSocket 代理所需的头，1Panel 可能用到
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;Upgrade&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$http_upgrade&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;Connection&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;upgrade&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 重要的转发头
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;Host&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$host&lt;/span&gt;; &lt;span style="color:#888;font-style:italic"&gt;# 传递原始请求的 Host 头
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;X-Real-IP&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$remote_addr&lt;/span&gt;; &lt;span style="color:#888;font-style:italic"&gt;# 传递真实客户端IP
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;X-Forwarded-For&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$proxy_add_x_forwarded_for&lt;/span&gt;; &lt;span style="color:#888;font-style:italic"&gt;# 传递完整的IP链
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# *** 传递原始请求协议，解决混合内容问题 ***
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;X-Forwarded-Proto&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$scheme&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 推荐：如果遇到大文件上传或下载问题，可以尝试关闭 buffering
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#888;font-style:italic"&gt;# proxy_buffering off;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#888;font-style:italic"&gt;# proxy_request_buffering off;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 class="heading" id="后记"&gt;
 后记
 &lt;a class="anchor" href="#%e5%90%8e%e8%ae%b0"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;在安装1panel之前没有使用过其他运维面板，也不是专业的运维人员，不过有一个GUI总归是好事。可是装上了之后，发现能用上的功能寥寥无几。&lt;/p&gt;
&lt;p&gt;来看看1panel官网介绍：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1Panel 作为一款现代化、开源的 Linux 服务器运维管理面板，其功能涵盖了服务器管理的方方面面，并特别强调了易用性和对新技术的支持。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h5 class="heading" id="核心服务器管理-高效管理"&gt;
 核心服务器管理 (高效管理)
 &lt;a class="anchor" href="#%e6%a0%b8%e5%bf%83%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%ae%a1%e7%90%86-%e9%ab%98%e6%95%88%e7%ae%a1%e7%90%86"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;这个还是很有用的，可以直观看到服务器的资源使用情况。&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;主机监控&lt;/strong&gt;: 实时监控服务器的 CPU、内存、磁盘 I/O、网络等各项性能指标。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件管理&lt;/strong&gt;: 提供在线文件管理器，方便用户上传、下载、编辑、删除服务器上的文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据库管理&lt;/strong&gt;: 可视化管理 MySQL、PostgreSQL、MongoDB 等多种数据库，包括创建、删除数据库、用户管理等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;容器管理&lt;/strong&gt;: 统一管理 Docker 容器，包括容器的启动、停止、重启、删除、日志查看等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 class="heading" id="网站与域名管理-快速建站"&gt;
 网站与域名管理 (快速建站)
 &lt;a class="anchor" href="#%e7%bd%91%e7%ab%99%e4%b8%8e%e5%9f%9f%e5%90%8d%e7%ae%a1%e7%90%86-%e5%bf%ab%e9%80%9f%e5%bb%ba%e7%ab%99"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;对我来说无用，目前docker的基本操作已经够简单了，Nginx配置写起来也不困难。&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;一键建站部署&lt;/strong&gt;: 深度集成 WordPress、Halo 等开源建站软件，支持一键快速部署。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域名管理与配置&lt;/strong&gt;: 方便地进行域名绑定、解析设置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSL 证书管理&lt;/strong&gt;: 支持自动申请和配置 Let&amp;rsquo;s Encrypt 等 SSL 证书，实现 HTTPS 安全访问。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多站点管理&lt;/strong&gt;: 支持在同一服务器上管理多个网站。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 class="heading" id="应用生态与商店"&gt;
 应用生态与商店
 &lt;a class="anchor" href="#%e5%ba%94%e7%94%a8%e7%94%9f%e6%80%81%e4%b8%8e%e5%95%86%e5%ba%97"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;同上，安装应用也不困难。&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;精选开源应用&lt;/strong&gt;: 提供一个丰富的应用商店，涵盖各类高质量的开源工具和应用软件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一键安装部署&lt;/strong&gt;: 用户可以轻松通过点击安装和部署这些应用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动更新管理&lt;/strong&gt;: 支持已安装应用的自动更新。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据备份与恢复&lt;/strong&gt;: 提供应用数据的一键备份和恢复功能。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;应用商店中包含的常见应用类别示例&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Web 服务器&lt;/strong&gt;: OpenResty, Nginx Proxy Manager, OpenLiteSpeed&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据库&lt;/strong&gt;: MySQL, Redis, PostgreSQL, MariaDB, MongoDB, Elasticsearch, Prometheus, Microsoft SQL Server&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DevOps 工具&lt;/strong&gt;: Gitea, Jenkins, 禅道, Docker Registry, ShowDoc, Nexus Repository&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开发工具&lt;/strong&gt;: phpMyAdmin, code-server (浏览器中的 VS Code), IT-Tools, Adminer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;建站系统&lt;/strong&gt;: Halo, WordPress, Typecho, Flarum, Wiki.js&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI / 大模型&lt;/strong&gt;: MaxKB (智能体平台), Ollama (本地大模型运行), OpenWebUI, ChatGPT-Next-Web, LobeChat&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;运行环境&lt;/strong&gt;: PHP (5/7/8), Node.js, &lt;strong&gt;Java&lt;/strong&gt;, Python, Go, .NET&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;中间件&lt;/strong&gt;: MinIO (对象存储), RabbitMQ (消息队列), Nacos (服务发现), Kafka, Apache Tomcat, RocketMQ&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全工具&lt;/strong&gt;: JumpServer (堡垒机), AdGuardHome (DNS 广告拦截), uuWAF (Web 应用防火墙), OpenVPN&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;云存储&lt;/strong&gt;: AList (多存储文件列表), Nextcloud, Cloudreve&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多媒体&lt;/strong&gt;: Jellyfin (媒体服务器), YesPlayMusic (网易云播放器), Navidrome (音乐服务器)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;休闲游戏&lt;/strong&gt;: 中文 DOS 游戏, Minecraft 服务器管理 (MCSManager), 幻兽帕鲁服务端&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;邮件服务&lt;/strong&gt;: Mailserver, Roundcube (Web 邮件客户端)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BI (商业智能)&lt;/strong&gt;: DataEase, Metabase (数据可视化分析工具)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其余的一些功能中，能吸引我的还有自动备份功能，未来可能会用到。&lt;/p&gt;
&lt;p&gt;说实话，无法使用nginx反代实现https访问差点把我劝退，1panel的卸载命令都已经敲在了终端中。不过还是更新了一下nginx配置，找到了问题所在，留下来了这个看起来很舒服的面板。希望以后可以发挥更大的作用。&lt;/p&gt;
&lt;h3 class="heading" id="哪吒监控v1"&gt;
 哪吒监控V1
 &lt;a class="anchor" href="#%e5%93%aa%e5%90%92%e7%9b%91%e6%8e%a7v1"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;h4 class="heading" id="安装前准备"&gt;
 安装前准备
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85%e5%89%8d%e5%87%86%e5%a4%87"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;h5 class="heading" id="域名"&gt;
 域名
 &lt;a class="anchor" href="#%e5%9f%9f%e5%90%8d"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;一个托管在「Cloudflare」的域名。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;解析到一个至少1c512MB的服务器上作为面板端（后端、监控端）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启「websocket」和「gRPC」












&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="" src="https://webp.050612.xyz/2025/07/20250720201537824.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 class="heading" id="安装哪吒面板端"&gt;
 安装哪吒面板端
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85%e5%93%aa%e5%90%92%e9%9d%a2%e6%9d%bf%e7%ab%af"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;官方手册：&lt;a href="https://nezha.wiki/guide/dashboard.html"&gt;安装 Dashboard | 哪吒服务器监控&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl -L https://raw.githubusercontent.com/nezhahq/scripts/refs/heads/main/install.sh -o nezha.sh &amp;amp;&amp;amp; chmod +x nezha.sh &amp;amp;&amp;amp; sudo ./nezha.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装流程：仅需要特别注意nezha-agent地址填入&lt;code&gt;解析域名:443&lt;/code&gt;












&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="" src="https://webp.050612.xyz/2025/07/20250720201932192.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 class="heading" id="配置nginx反向代理"&gt;
 配置nginx反向代理
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%aenginx%e5%8f%8d%e5%90%91%e4%bb%a3%e7%90%86"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;一个推荐的nginx配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-nginx" data-lang="nginx"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# ===================================================================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 哪吒监控 - 后端服务连接池配置
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 定义一个名为 &amp;#34;dashboard&amp;#34; 的后端服务池，用于连接复用，提高性能。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# ===================================================================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt;&lt;span style="font-weight:bold;text-decoration:underline"&gt;upstream&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;dashboard&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;server&lt;/span&gt; 127.0.0.1:8008;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;keepalive&lt;/span&gt; 512;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# ===================================================================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# HTTP (80) 到 HTTPS (443) 的永久重定向
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 这是最佳安全实践，确保所有用户都通过加密连接访问。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# ===================================================================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt;&lt;span style="font-weight:bold;text-decoration:underline"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;listen&lt;/span&gt; 80;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;listen&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;[::]:80&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# &amp;lt;--- 修改这里: 将 dashboard.example.com 替换为你的真实域名
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;server_name&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;dashboard.example.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 将所有到来的 HTTP 请求通过 301 永久重定向到对应的 HTTPS 地址
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;return&lt;/span&gt; 301 &lt;span style="color:#666;font-style:italic"&gt;https://&lt;/span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$host$request_uri&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# ===================================================================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# HTTPS (443) 主服务配置
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 所有加密流量的入口，处理 Web、WebSocket 和 gRPC 请求。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# ===================================================================
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt;&lt;span style="font-weight:bold;text-decoration:underline"&gt;server&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;listen&lt;/span&gt; 443 &lt;span style="color:#666;font-style:italic"&gt;ssl&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;http2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;listen&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;[::]:443&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;ssl&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;http2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# &amp;lt;--- 修改这里: 将 dashboard.example.com 替换为你的真实域名
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;server_name&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;dashboard.example.com&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# --- SSL 证书配置 ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#888;font-style:italic"&gt;# &amp;lt;--- 修改这里: 替换为你的 SSL 证书和私钥的实际路径
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_certificate&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;/etc/letsencrypt/live/dashboard.example.com/fullchain.pem&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_certificate_key&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;/etc/letsencrypt/live/dashboard.example.com/key.pem&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# --- SSL 性能与安全优化 (通常无需修改) ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_stapling&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;on&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_session_timeout&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;1d&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_session_cache&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;shared:SSL:10m&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;ssl_protocols&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;TLSv1.2&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;TLSv1.3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 允许 Header 中包含下划线，兼容某些特殊情况
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;underscores_in_headers&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;on&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# --- 获取真实访客 IP (Cloudflare CDN 专用配置) ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 因为你使用了 Cloudflare，所以保留这两行配置。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 它告诉 Nginx 要信任所有 IP 发来的请求头，并从 CF-Connecting-IP 头中获取真实 IP。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 更安全的做法是仅信任来自 Cloudflare 官方 IP 段的请求，但当前配置对于绝大多数场景是足够且方便的。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;set_real_ip_from&lt;/span&gt; 0.0.0.0&lt;span style="color:#666;font-style:italic"&gt;/0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;real_ip_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;CF-Connecting-IP&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# --- gRPC 请求处理 (Agent 核心数据上报) ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;location&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;^~&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;/proto.NezhaService/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;grpc_pass&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;grpc://dashboard&lt;/span&gt;; &lt;span style="color:#888;font-style:italic"&gt;# 将 gRPC 请求转发给后端服务池
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 将真实访客 IP 传递给后端 (使用 Cloudflare 提供的 Header)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;grpc_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;nz-realip&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$http_CF_Connecting_IP&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 其他 gRPC 相关优化 (通常无需修改)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;grpc_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;Host&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$host&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;grpc_read_timeout&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;600s&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;grpc_send_timeout&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;600s&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;grpc_socket_keepalive&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;on&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;client_max_body_size&lt;/span&gt; 10m;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;grpc_buffer_size&lt;/span&gt; 4m;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# --- WebSocket 请求处理 (网页终端、文件管理等实时功能) ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;location&lt;/span&gt; ~&lt;span style="color:#666;font-style:italic"&gt;*&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;^/api/v1/ws/(server|terminal|file)(.*)&lt;/span&gt;$ {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_pass&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;http://127.0.0.1:8008&lt;/span&gt;; &lt;span style="color:#888;font-style:italic"&gt;# 直接转发给后端的 8008 端口
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# --- WebSocket 代理关键配置 ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_http_version&lt;/span&gt; 1&lt;span style="color:#666;font-style:italic"&gt;.1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;Upgrade&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$http_upgrade&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;Connection&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;upgrade&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 将真实访客 IP 传递给后端 (使用 Cloudflare 提供的 Header)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;nz-realip&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$http_CF_Connecting_IP&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 其他 Header 和超时配置 (通常无需修改)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;Host&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$host&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;Origin&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;https://&lt;/span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$host&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_read_timeout&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;3600s&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_send_timeout&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;3600s&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# --- Web 页面请求处理 (兜底规则) ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;location&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_pass&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;http://127.0.0.1:8008&lt;/span&gt;; &lt;span style="color:#888;font-style:italic"&gt;# 转发给后端的 8008 端口
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 将真实访客 IP 传递给后端 (使用 Cloudflare 提供的 Header)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;nz-realip&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$http_CF_Connecting_IP&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 其他 Header 和超时配置 (通常无需修改)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_set_header&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;Host&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$host&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_read_timeout&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;3600s&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_send_timeout&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;3600s&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_buffer_size&lt;/span&gt; 128k;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_buffers&lt;/span&gt; 4 256k;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_busy_buffers_size&lt;/span&gt; 256k;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;proxy_max_temp_file_size&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 class="heading" id="哪吒面板设置"&gt;
 哪吒面板设置
 &lt;a class="anchor" href="#%e5%93%aa%e5%90%92%e9%9d%a2%e6%9d%bf%e8%ae%be%e7%bd%ae"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;到了这一步，此时就可以通过域名访问面板了，并且并没有暴露多余的端口。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首次登录用户与密码均为&lt;code&gt;admin&lt;/code&gt;,第一步先改个默认密码再说。&lt;/li&gt;
&lt;li&gt;因为面板和 agent 都开启了 CF CDN，我们需要在面板系统设置里面的真实 IP 请求头填写&lt;code&gt;CF-Connecting-IP&lt;/code&gt;，后台的登录 IP 以及其它地方才能正常显示真实 IP。












&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="" src="https://webp.050612.xyz/2025/07/20250720202751842.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 class="heading" id="面板开启oauth2"&gt;
 面板开启OAuth2
 &lt;a class="anchor" href="#%e9%9d%a2%e6%9d%bf%e5%bc%80%e5%90%afoauth2"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;官方说明：&lt;a href="https://nezha.wiki/guide/q14.html#%E8%AE%BE%E7%BD%AE-oauth-2-0-%E7%BB%91%E5%AE%9A"&gt;设置 OAuth 2.0 绑定 | 哪吒服务器监控&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我选择使用「github」&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 &lt;a href="https://github.com/settings/developers"&gt;GitHub开发者设置&lt;/a&gt;，依次选择 “OAuth Apps” - “New OAuth App”。&lt;/li&gt;
&lt;li&gt;填写以下需要的字段：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Application name&lt;/code&gt;：应用名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Homepage URL&lt;/code&gt;：面板访问地址，例如 &lt;code&gt;https://nezha.example.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Authorization callback URL&lt;/code&gt; 面板的 Callback 地址，这里只检测前缀，所以可以填写 &lt;code&gt;https://nezha.example.com/api/v1/oauth2/callback&lt;/code&gt;。












&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="" src="https://webp.050612.xyz/2025/07/20250720203459271.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="3"&gt;
&lt;li&gt;在新页面中记录 Client ID 和 Client secrets，完成面板 OAuth 2.0 配置：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-yaml" data-lang="yaml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;oauth2:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; GitHub:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; client_id: &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;a-unique-id&amp;#34;&lt;/span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 替换你的 Client ID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; client_secret: &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;a-unique-secret&amp;#34;&lt;/span&gt; &lt;span style="color:#888;font-style:italic"&gt;# 替换你的 Client secrets&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; endpoint:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; auth_url: &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;https://github.com/login/oauth/authorize&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; token_url: &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;https://github.com/login/oauth/access_token&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; user_info_url: &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;https://api.github.com/user&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; user_id_path: &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;id&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="4"&gt;
&lt;li&gt;将以上配置添加到&lt;code&gt;/opt/nezha/dashboard/data/config.yaml&lt;/code&gt;面板（Dashboard） 配置&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo vim /opt/nezha/dashboard/data/config.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="5"&gt;
&lt;li&gt;重启面板使新配置生效&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;./nezha.sh 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="6"&gt;
&lt;li&gt;打开个人信息设置绑定github，并关闭密码登录












&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="" src="https://webp.050612.xyz/2025/07/20250720204140554.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 class="heading" id="安装探针agent端监控端"&gt;
 安装探针（agent端、监控端）
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85%e6%8e%a2%e9%92%88agent%e7%ab%af%e7%9b%91%e6%8e%a7%e7%ab%af"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;官方教程：&lt;a href="https://nezha.wiki/guide/agent.html"&gt;安装 Agent | 哪吒服务器监控&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 &lt;code&gt;服务器&lt;/code&gt; 页面中，点击 &lt;code&gt;安装命令&lt;/code&gt; 并选择对应操作系统，安装命令将自动复制到你的剪贴板。&lt;/li&gt;
&lt;li&gt;在被控端服务器中运行安装命令，等待安装完成后返回到 &lt;code&gt;服务器&lt;/code&gt; 页面查看是否上线。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;在面板显示&lt;code&gt;暴力攻击代理秘密&lt;/code&gt; 与 &lt;code&gt;gRPC 认证失败&lt;/code&gt;，但是又能正常监控，还以为发现了bug，但是最后发现是因为我多次安装agent导致出现了一些僵尸进程。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;ps -ef | grep nezha-agent&lt;/code&gt; 查看，并使用 &lt;code&gt;sudo kill&lt;/code&gt; 杀掉僵尸进程就没有了。&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="" src="https://webp.050612.xyz/2025/07/20250720212944889.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h5 class="heading" id="安全设置-关闭探针远程控制功能"&gt;
 安全设置： 关闭探针远程控制功能
 &lt;a class="anchor" href="#%e5%ae%89%e5%85%a8%e8%ae%be%e7%bd%ae-%e5%85%b3%e9%97%ad%e6%8e%a2%e9%92%88%e8%bf%9c%e7%a8%8b%e6%8e%a7%e5%88%b6%e5%8a%9f%e8%83%bd"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;打开&lt;code&gt;/opt/nezha/agent/config.yml&lt;/code&gt;，把 &lt;code&gt;disable_command_execute&lt;/code&gt;改成true&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo vim /opt/nezha/agent/config.yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;重启agent服务&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl restart nezha-agent
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 class="heading" id="添加备注"&gt;
 添加备注
 &lt;a class="anchor" href="#%e6%b7%bb%e5%8a%a0%e5%a4%87%e6%b3%a8"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;&lt;a href="https://nezhainfojson.pages.dev"&gt;公开备注生成器&lt;/a&gt;&lt;/p&gt;
&lt;h5 class="heading" id="卸载agent端"&gt;
 卸载agent端
 &lt;a class="anchor" href="#%e5%8d%b8%e8%bd%bdagent%e7%ab%af"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;停止 Agent 服务&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl stop nezha-agent&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;禁用开机自启&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;防止服务在系统启动时自动运行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl disable nezha-agent&lt;/code&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;删除服务文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;移除 &lt;code&gt;nezha-agent&lt;/code&gt; 的服务配置文件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo rm /etc/systemd/system/nezha-agent.service&lt;/code&gt;&lt;/p&gt;
&lt;ol start="4"&gt;
&lt;li&gt;删除 Agent 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;删除安装目录中的 Agent 文件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo rm -rf /opt/nezha/agent&lt;/code&gt;&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;重新加载 systemd 配置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;确保系统服务管理器加载最新的配置。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl daemon-reload&lt;/code&gt;&lt;/p&gt;
&lt;ol start="6"&gt;
&lt;li&gt;检查残留进程
确认没有遗留的 &lt;code&gt;nezha-agent&lt;/code&gt; 进程在运行。如果发现仍有相关进程运行，请使用 &lt;code&gt;sudo kill&lt;/code&gt; 命令终止。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;ps -ef | grep nezha-agent&lt;/code&gt;&lt;/p&gt;
&lt;ol start="7"&gt;
&lt;li&gt;删除日志文件（可选）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果需要，您可以删除与 &lt;code&gt;nezha-agent&lt;/code&gt; 相关的日志文件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo rm -rf /var/log/nezha&lt;/code&gt;&lt;/p&gt;
&lt;h2 class="heading" id="关闭-ipv6--开启bbr"&gt;
 关闭 ipv6 &amp;amp; 开启bbr
 &lt;a class="anchor" href="#%e5%85%b3%e9%97%ad-ipv6--%e5%bc%80%e5%90%afbbr"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;我的网络环境为校园网，对ipv6的支持并不好；&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;echo&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;net.core.default_qdisc=fq&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sysctl.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;echo&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sysctl.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sysctl -p
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;lsmod | grep bbr &lt;span style="color:#888;font-style:italic"&gt;# 查看是否成功开启BBR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 1. 将配置添加到 /etc/sysctl.conf (使用 tee -a 确保安全追加)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;echo&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;net.ipv6.conf.all.disable_ipv6 = 1&amp;#34;&lt;/span&gt; | sudo tee -a /etc/sysctl.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;echo&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;net.ipv6.conf.default.disable_ipv6 = 1&amp;#34;&lt;/span&gt; | sudo tee -a /etc/sysctl.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;echo&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;net.ipv6.conf.lo.disable_ipv6 = 1&amp;#34;&lt;/span&gt; | sudo tee -a /etc/sysctl.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 2. 使配置立即生效 (并加载所有 /etc/sysctl.conf 中的配置)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo sysctl -p
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 3. (可选) 重启系统以确保所有服务都以新配置启动&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# sudo reboot&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>域名管理：Cloudflare DNS托管与SSL证书配置</title><link>https://blog.yzyy.de/explore/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%9F%9F%E5%90%8D%E7%9B%B8%E5%85%B3/</link><pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate><guid>https://blog.yzyy.de/explore/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%9F%9F%E5%90%8D%E7%9B%B8%E5%85%B3/</guid><description>&lt;h1 class="heading" id="域名相关"&gt;
 域名相关
 &lt;a class="anchor" href="#%e5%9f%9f%e5%90%8d%e7%9b%b8%e5%85%b3"&gt;#&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;本篇记录一下域名相关的操作吧，包括到cf托管，申请与安装SSL证书等。&lt;/p&gt;
&lt;h2 class="heading" id="dns解析和将域名托管到cloudflare"&gt;
 DNS解析和将域名托管到cloudflare
 &lt;a class="anchor" href="#dns%e8%a7%a3%e6%9e%90%e5%92%8c%e5%b0%86%e5%9f%9f%e5%90%8d%e6%89%98%e7%ae%a1%e5%88%b0cloudflare"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;感谢&lt;a href="https://sarakale.top/blog/posts/3a730d01/#%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C"&gt;Namesilo/Cloudflare域名注册和解析设置教程 | SaraKale&amp;rsquo;s blog&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;到 &lt;a href="https://www.cloudflare.com/"&gt;Cloudflare&lt;/a&gt; 添加你的站点，选择 Free 免费计划。











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="Pasted%20image%2020250113153620" src="https://webp.050612.xyz/2025/02/Pasted%20image%2020250113153620.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在下一页上，您需要选择首选的 CDN 计划。选择 Free 计划。单击其图标和&lt;strong&gt;确认计划&lt;/strong&gt;按钮继续：











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="Pasted%20image%2020250113153644" src="https://webp.050612.xyz/2025/02/Pasted%20image%2020250113153644.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果之前已经做过解析就可以看到现有的DNS记录。











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="Pasted%20image%2020250113153828" src="https://webp.050612.xyz/2025/02/Pasted%20image%2020250113153828.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这里先不用管，继续下一步。











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="Pasted%20image%2020250113153859" src="https://webp.050612.xyz/2025/02/Pasted%20image%2020250113153859.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以看到给了两个NS服务器，回到域名提供商后台更改NS服务器。











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="Pasted%20image%2020250113153945" src="https://webp.050612.xyz/2025/02/Pasted%20image%2020250113153945.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NameCheap更改ns服务器参考官方教程&lt;a href="https://www.namecheap.com/support/knowledgebase/article.aspx/9607/2210/how-to-set-up-dns-records-for-your-domain-in-a-cloudflare-account/"&gt;Title Unavailable | Site Unreachable&lt;/a&gt;，其他域名服务商大同小异。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 class="heading" id="申请tlsssl证书"&gt;
 申请TLS\SSL证书
 &lt;a class="anchor" href="#%e7%94%b3%e8%af%b7tlsssl%e8%af%81%e4%b9%a6"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;有两种方式，目前选择cloudflare开启代理的模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动续签：&lt;/li&gt;
&lt;li&gt;使用cloudflare的服务，开启小黄云，就可以使用一种泛域名证书，只能当做源站和cloudflare握手的凭证，其他的不认。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class="heading" id="cloudflare的服务"&gt;
 cloudflare的服务
 &lt;a class="anchor" href="#cloudflare%e7%9a%84%e6%9c%8d%e5%8a%a1"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;下面采用cloudflare的服务，也是一份cloudflare的初步探索的记录&lt;/p&gt;
&lt;h4 class="heading" id="dns管理"&gt;
 DNS管理
 &lt;a class="anchor" href="#dns%e7%ae%a1%e7%90%86"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;可以在DNS界面管理DNS解析，以及管理是否开启小黄云代理











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="e%2020250113163808" src="https://webp.050612.xyz/2025/02/Pasted%20image%2020250113163808.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 class="heading" id="ssltls证书"&gt;
 SSL\TLS证书
 &lt;a class="anchor" href="#ssltls%e8%af%81%e4%b9%a6"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="Pasted%20image%2020250113164004" src="https://webp.050612.xyz/2025/02/Pasted%20image%2020250113164004.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;灵活：web浏览器和cloudflare之间采用443HTTPS，cloudflare和cloudflare之间采用80HTTP&lt;/li&gt;
&lt;li&gt;完全：使用其他未公开认证的SSL证书时采用，源服务器必须配置 SSL 证书，但 Cloudflare &lt;strong&gt;不验证证书的有效性&lt;/strong&gt;（例如，可以是自签名证书或过期证书）。&lt;/li&gt;
&lt;li&gt;完全（严格）：客户端到 Cloudflare：HTTPS（使用 Cloudflare Universal SSL 证书）。 Cloudflare 到源服务器：&lt;strong&gt;HTTPS（加密）&lt;/strong&gt;。源服务器必须配置有效的 SSL 证书，该证书必须由&lt;strong&gt;受信任的 CA 机构签发&lt;/strong&gt;或为 &lt;strong&gt;Cloudflare Origin CA 证书&lt;/strong&gt;，并且证书中的域名必须与请求的域名匹配。Cloudflare 会验证证书的有效性，包括有效期、颁发机构和域名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以在源服务器页面申请 &lt;strong&gt;Cloudflare Origin CA 证书&lt;/strong&gt;，并将该证书放到服务器上。源证书仅对Cloudflare与源服务器之间的加密有效。&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="Pasted%20image%2020250113164800" src="https://webp.050612.xyz/2025/02/Pasted%20image%2020250113164800.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 class="heading" id="under-attack"&gt;
 Under Attack
 &lt;a class="anchor" href="#under-attack"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;可以在安全性-设置里打开Under Attack模式，强制开启验证。











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="Pasted%20image%2020250113165205" src="https://webp.050612.xyz/2025/02/Pasted%20image%2020250113165205.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 class="heading" id="使用-acmesh-dns-验证的方式签发-letsencrypt-证书"&gt;
 使用 acme.sh DNS 验证的方式签发 Let&amp;rsquo;sEncrypt 证书
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8-acmesh-dns-%e9%aa%8c%e8%af%81%e7%9a%84%e6%96%b9%e5%bc%8f%e7%ad%be%e5%8f%91-letsencrypt-%e8%af%81%e4%b9%a6"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;参考：&lt;a href="https://blog.uuphy.com/posts/%E9%85%8D%E7%BD%AE-acme.sh-%E5%85%8D%E8%B4%B9%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%8F%91%E6%B3%9B%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/"&gt;使用 acme.sh DNS 验证的方式签发 Let&amp;rsquo;sEncrypt 证书&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://acme.sh/"&gt;acme.sh&lt;/a&gt; 是一个用来自动获取和管理 SSL/TLS 证书的开源脚本，可以从 Let’s Encrypt 等多个 CA 获取免费的证书。结合使用 Cloudflare DNS 验证的模式申请泛域名证书，并自动续签。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2025-07-17更新&lt;/p&gt;
&lt;p&gt;方案有改进，请看&lt;a href="https://blog.yzyy.de/post/%E6%96%B0%E8%B4%AD%E4%B8%80%E5%8F%B08gb%E7%9A%84vds/#自动续签的方案改进"&gt;新购一台8GB的VDS&lt;/a&gt;。
主要优化了一台vps多个域名的配置方式，如果是单个域名，以下方案相同。&lt;/p&gt;
&lt;h4 class="heading" id="cloudflare-api"&gt;
 Cloudflare API
 &lt;a class="anchor" href="#cloudflare-api"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;使用 Cloudflare DNS 模式需要准备:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zone ID&lt;/li&gt;
&lt;li&gt;Account ID&lt;/li&gt;
&lt;li&gt;API Token&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 class="heading" id="获取-zone-id-account-id"&gt;
 获取 Zone ID, Account ID
 &lt;a class="anchor" href="#%e8%8e%b7%e5%8f%96-zone-id-account-id"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;这两种 ID 直接在 Overview 页就能找到。&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="image" src="https://webp.050612.xyz/2025/02/2edb816d28456e59ad4da2b02c3ff69450847554_2_690x370.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h5 class="heading" id="获取-api-token"&gt;
 获取 API Token
 &lt;a class="anchor" href="#%e8%8e%b7%e5%8f%96-api-token"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;Overview 页点击 &lt;code&gt;获取您的 API 令牌&lt;/code&gt; 进入 API Tokens 页。&lt;/p&gt;
&lt;p&gt;点击 API Tokens 项旁边 &lt;code&gt;创建令牌&lt;/code&gt; 按钮，接着选择 &lt;code&gt;编辑区域 DNS&lt;/code&gt; 的模板，点击 &lt;code&gt;使用模板&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="image" src="https://webp.050612.xyz/2025/02/e15d8a0a1de821faab5355e610b581016975b974_2_690x265.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="image" src="https://webp.050612.xyz/2025/02/42f87595d27a6fb3ed1fe329934517f5416920c6_2_690x210.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;区域资源&lt;/code&gt; 里选择需要签发的域名，&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;客户端 IP 地址筛选&lt;/code&gt; 里建议写下 acme.sh 所在的主机做为白名单，需要注意，如果服务器有 ipv6 地址，则也需要添加，因为有可能会 ipv6 优先访问。&lt;/p&gt;
&lt;p&gt;击 &lt;code&gt;继续以显示摘要&lt;/code&gt; , 确认没问题后最后点击 &lt;code&gt;创建令牌&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="image" src="https://webp.050612.xyz/2025/02/e88966d6049c27c31c632f9471ec1b79be287b59_2_510x499.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;此时就会出现一个 Token,，即 CF_Token，拷贝备用。&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="image" src="https://webp.050612.xyz/2025/02/ca6093ea6bf83325809ea6179d4239ae2c9818cc_2_690x404.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h5 class="heading" id="注意"&gt;
 注意
 &lt;a class="anchor" href="#%e6%b3%a8%e6%84%8f"&gt;#&lt;/a&gt;
&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;注意新增域名时，需要更改API Token所包含的域名&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意有多台机器时，需要新增机器的IP到白名单&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="update_cf_api_token" src="https://webp.050612.xyz/2025/02/update_cf_api_token.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;













&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="cf-api-token-ip" src="https://webp.050612.xyz/2025/02/cf-api-token-ip.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h4 class="heading" id="一个完整的演示"&gt;
 一个完整的演示
 &lt;a class="anchor" href="#%e4%b8%80%e4%b8%aa%e5%ae%8c%e6%95%b4%e7%9a%84%e6%bc%94%e7%a4%ba"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;感谢：&lt;a href="https://atpx.com/blog/auto-update-ssl-with-acme/"&gt;使用 acme.sh 自动签发和更新证书 - atpX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;为了使整个流程更加清晰（&lt;del&gt;方便自己操作&lt;/del&gt;），这里贴一个自己平时使用 acme.sh 申请证书的完整流程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;申请方式：DNS 认证（使用 Cloudflare API）&lt;/li&gt;
&lt;li&gt;申请证书 CA：Let’s Encrypt&lt;/li&gt;
&lt;li&gt;申请证书类型：RSA + ECC 两个通配符证书&lt;/li&gt;
&lt;li&gt;**同一台主机多个域名的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后续申请证书的命令，都是在 root 用户下执行的，请先使用 &lt;code&gt;su&lt;/code&gt; 切换到 root 用户。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 进入root用户&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;su
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 安装 acme.sh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl https://get.acme.sh | sh
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 刷新 shell 变量配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;source&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 导入 Cloudflare API Token&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;export&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;CF_Token&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;export&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;CF_Account_ID&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;export&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;CF_Zone_ID&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 设置默认 CA 为 Let&amp;#39;s Encrypt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --set-default-ca --server letsencrypt
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 签发 RSA 证书&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --issue --dns dns_cf -d xxx.xyz -d *.xxx.xyz --keylength 2048
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 安装 RSA 证书到指定路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --install-cert -d domain.tld &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--key-file /path/to/ssl/domain.tld_private.key &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--fullchain-file /path/to/ssl/domain.tld_chain.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--capath /path/to/ssl/domain.tld_ca.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--reloadcmd &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;service nginx reload&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 签发 ECC 证书，若不需要，跳过即可&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --issue --dns dns_cf -d domain.tld -d *.domain.tld --keylength ec-256
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 安装 ECC 证书到指定路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --install-cert -d domain.tld --ecc &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--key-file /path/to/ssl/ecc_domain.tld_private.key &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--fullchain-file /path/to/ssl/ecc_domain.tld_chain.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--capath /path/to/ssl/ecc_domain.tld_ca.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--reloadcmd &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;service nginx reload&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;###############################第二个域名#####################################################################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 取消环境变量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;unset&lt;/span&gt; CF_Token
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;unset&lt;/span&gt; CF_Account_ID
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;unset&lt;/span&gt; CF_Zone_ID
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 至此证书安装完毕&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 下面是同一台主机申请第二个域名证书&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 导入另一个 Cloudflare API Token&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;export&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;CF_Token&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;export&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;CF_Account_ID&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;export&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;CF_Zone_ID&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 新建一个文件夹作为 config home，默认会把所有文件存在这里&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;mkdir /root/.acme2
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 设置默认 CA 为 Let&amp;#39;s Encrypt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --config-home /root/.acme2 --set-default-ca --server letsencrypt
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 签发 RSA 证书&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --config-home /root/.acme2 --issue --dns dns_cf -d domain.tld -d *.domain.tld --keylength 2048
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 安装 RSA 证书到指定路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --config-home /root/.acme2 &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--install-cert -d domain.tld &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--key-file /path/to/ssl/domain.tld_private.key &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--fullchain-file /path/to/ssl/domain.tld_chain.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--capath /path/to/ssl/domain.tld_ca.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--reloadcmd &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;service nginx reload&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 签发 ECC 证书，若不需要，跳过即可&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --config-home /root/.acme2 --issue --dns dns_cf -d domain.tld -d *.domain.tld --keylength ec-256
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 安装 ECC 证书到指定路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;acme.sh --config-home /root/.acme2 &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--install-cert -d domain.tld --ecc &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--key-file /path/to/ssl/ecc_domain.tld_private.key &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--fullchain-file /path/to/ssl/ecc_domain.tld_chain.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--capath /path/to/ssl/ecc_domain.tld_ca.pem &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt;--reloadcmd &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;service nginx reload&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 手动添加另一个 cron 任务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# crontab -e&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;50 0 * * * &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;/root/.acme.sh&amp;#34;&lt;/span&gt;/acme.sh --cron --home &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;/root/.acme.sh&amp;#34;&lt;/span&gt; --config-home &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;/root/.acme2&amp;#34;&lt;/span&gt; &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 class="heading" id="两个服务的比较"&gt;
 两个服务的比较
 &lt;a class="anchor" href="#%e4%b8%a4%e4%b8%aa%e6%9c%8d%e5%8a%a1%e7%9a%84%e6%af%94%e8%be%83"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;h4 class="heading" id="优点"&gt;
 优点
 &lt;a class="anchor" href="#%e4%bc%98%e7%82%b9"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;acme.sh` + Let&amp;rsquo;s Encrypt + Cloudflare DNS
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;自动化&lt;/strong&gt;：&lt;code&gt;acme.sh&lt;/code&gt; 脚本可以自动完成证书的申请、验证和续期过程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无需开放 80/443 端口&lt;/strong&gt;：使用 DNS 验证方式，无需在服务器上开放 80 或 443 端口，提高了安全性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不依赖 Cloudflare 代理&lt;/strong&gt;：这种方式只使用 Cloudflare 的 DNS 服务，不依赖 Cloudflare 的代理服务&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Cloudflare
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Universal SSL&lt;/strong&gt;：Cloudflare 免费提供 Universal SSL 证书，可以快速启用 HTTPS。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Origin CA 证书&lt;/strong&gt;：Cloudflare 提供 Origin CA 证书，可以实现 Cloudflare 到源服务器的加密连接（严格模式）。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class="heading" id="缺点"&gt;
 缺点
 &lt;a class="anchor" href="#%e7%bc%ba%e7%82%b9"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;acme.sh` + Let&amp;rsquo;s Encrypt + Cloudflare DNS
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;配置相对复杂&lt;/strong&gt;：相比于使用 Cloudflare 的一键 SSL 功能，这种方式需要手动配置 &lt;code&gt;acme.sh&lt;/code&gt; 脚本和服务器。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不提供 DDoS 防护和其他 Cloudflare 功能&lt;/strong&gt;：这种方式只使用了 Cloudflare 的 DNS 服务，不提供 DDoS 防护、CDN 加速、WAF 等其他 Cloudflare 功能。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Cloudflare
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Origin CA 证书浏览器不信任&lt;/strong&gt;：Cloudflare 的 Origin CA 证书不被浏览器信任，需要配合 Cloudflare 的代理服务使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class="heading" id="应用场景比较"&gt;
 应用场景比较
 &lt;a class="anchor" href="#%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af%e6%af%94%e8%be%83"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;特性&lt;/th&gt;
 &lt;th&gt;&lt;code&gt;acme.sh&lt;/code&gt; + Let&amp;rsquo;s Encrypt + Cloudflare DNS&lt;/th&gt;
 &lt;th&gt;Cloudflare 服务&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;适用场景&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;不需要 Cloudflare 代理 &lt;!-- raw HTML omitted --&gt;需要在其他服务上使用证书 &lt;!-- raw HTML omitted --&gt;希望完全控制证书&lt;/td&gt;
 &lt;td&gt;需要 DDoS 防护&lt;!-- raw HTML omitted --&gt;需要 CDN 加速&lt;!-- raw HTML omitted --&gt;需要 WAF&lt;!-- raw HTML omitted --&gt;希望隐藏服务器 IP &lt;!-- raw HTML omitted --&gt;需要简单易用的 SSL 配置&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;SSL 证书&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Let&amp;rsquo;s Encrypt 免费证书&lt;/td&gt;
 &lt;td&gt;Cloudflare Universal SSL 或 Origin CA 证书&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;泛域名证书&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;支持&lt;/td&gt;
 &lt;td&gt;支持（Origin CA 证书需配合代理使用）&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;服务器 IP&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;暴露&lt;/td&gt;
 &lt;td&gt;隐藏&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;DDoS 防护&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;无&lt;/td&gt;
 &lt;td&gt;有&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;CDN 加速&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;无&lt;/td&gt;
 &lt;td&gt;有&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;WAF&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;无&lt;/td&gt;
 &lt;td&gt;有&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;配置难度&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;相对复杂&lt;/td&gt;
 &lt;td&gt;简单&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;控制权&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;完全控制&lt;/td&gt;
 &lt;td&gt;部分控制&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;依赖性&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;仅依赖 Cloudflare DNS 和 Let&amp;rsquo;s Encrypt&lt;/td&gt;
 &lt;td&gt;依赖 Cloudflare 的所有服务&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;</description></item><item><title>服务器配置实战指南：从安全加固到Nginx反代部署</title><link>https://blog.yzyy.de/explore/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/</link><pubDate>Fri, 12 Apr 2024 00:00:00 +0000</pubDate><guid>https://blog.yzyy.de/explore/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/</guid><description>&lt;h2 class="heading" id="安全性"&gt;
 安全性
 &lt;a class="anchor" href="#%e5%ae%89%e5%85%a8%e6%80%a7"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;参考&lt;a href="https://blog.yzyy.de/explore/%E6%9C%8D%E5%8A%A1%E5%99%A8/vps%E5%9F%BA%E6%9C%AC%E5%AE%89%E5%85%A8%E6%8E%AA%E6%96%BD/"&gt;VPS基础安全配置实践指南&lt;/a&gt;进行配置&lt;/p&gt;
&lt;hr&gt;
&lt;h2 class="heading" id="安装docker和dockercompose"&gt;
 安装docker和dockercompose
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85docker%e5%92%8cdockercompose"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;h3 class="heading" id="安装-docker"&gt;
 安装 Docker
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85-docker"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;h4 class="heading" id="更新软件包列表"&gt;
 更新软件包列表
 &lt;a class="anchor" href="#%e6%9b%b4%e6%96%b0%e8%bd%af%e4%bb%b6%e5%8c%85%e5%88%97%e8%a1%a8"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 class="heading" id="安装必要的软件包"&gt;
 安装必要的软件包
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85%e5%bf%85%e8%a6%81%e7%9a%84%e8%bd%af%e4%bb%b6%e5%8c%85"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;安装一些必要的软件包，这些软件包允许 &lt;code&gt;apt&lt;/code&gt; 通过 HTTPS 使用仓库。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt install apt-transport-https ca-certificates curl software-properties-common
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 class="heading" id="添加-docker-的官方-gpg-密钥"&gt;
 添加 Docker 的官方 GPG 密钥
 &lt;a class="anchor" href="#%e6%b7%bb%e5%8a%a0-docker-%e7%9a%84%e5%ae%98%e6%96%b9-gpg-%e5%af%86%e9%92%a5"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;添加 Docker 的官方 GPG 密钥，以便验证下载的软件包。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 class="heading" id="添加-docker-仓库"&gt;
 添加 Docker 仓库
 &lt;a class="anchor" href="#%e6%b7%bb%e5%8a%a0-docker-%e4%bb%93%e5%ba%93"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;将 Docker 的官方仓库添加到你的 &lt;code&gt;apt&lt;/code&gt; 软件源列表中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;echo&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;deb [arch=&lt;/span&gt;&lt;span style="font-weight:bold;text-decoration:underline"&gt;$(&lt;/span&gt;dpkg --print-architecture&lt;span style="font-weight:bold;text-decoration:underline"&gt;)&lt;/span&gt;&lt;span style="color:#666;font-style:italic"&gt; signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu &lt;/span&gt;&lt;span style="font-weight:bold;text-decoration:underline"&gt;$(&lt;/span&gt;lsb_release -cs&lt;span style="font-weight:bold;text-decoration:underline"&gt;)&lt;/span&gt;&lt;span style="color:#666;font-style:italic"&gt; stable&amp;#34;&lt;/span&gt; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;再次更新软件包列表，以包含新添加的 Docker 仓库。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 class="heading" id="安装-docker-engine"&gt;
 安装 Docker Engine
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85-docker-engine"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;安装&lt;code&gt;Docker Engine、Docker CLI&lt;/code&gt;和&lt;code&gt; Containerd&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt install docker-ce docker-ce-cli containerd.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 class="heading" id="验证-docker-安装"&gt;
 验证 Docker 安装
 &lt;a class="anchor" href="#%e9%aa%8c%e8%af%81-docker-%e5%ae%89%e8%a3%85"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;验证 Docker 是否成功安装，并检查 Docker 服务是否正在运行。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl status docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果 Docker 服务正在运行，应该看到类似 &lt;code&gt;active (running)&lt;/code&gt; 的输出。&lt;/p&gt;
&lt;p&gt;也可以运行一个简单的 Docker 镜像来验证 Docker 是否可以正常工作。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo docker run hello-world
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;应该看到一条欢迎消息，表明 Docker 安装成功。&lt;/p&gt;
&lt;h3 class="heading" id="安装-docker-composev2-可跳过"&gt;
 安装 Docker Compose&lt;strong&gt;V2&lt;/strong&gt; (可跳过)
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85-docker-composev2-%e5%8f%af%e8%b7%b3%e8%bf%87"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Docker 官方为了简化开发者的安装和使用流程，已经将 Docker Compose V2 作为一个核心插件，并将其包含在标准的 Docker Engine (&lt;code&gt;docker-ce&lt;/code&gt;) 安装包的&lt;strong&gt;依赖&lt;/strong&gt;或&lt;strong&gt;推荐&lt;/strong&gt;列表中。&lt;/p&gt;
&lt;p&gt;这意味着，当上面步骤中使用 &lt;code&gt;apt&lt;/code&gt; 安装 &lt;code&gt;docker-ce&lt;/code&gt; 时，&lt;code&gt;apt&lt;/code&gt; 会自动解析这些依赖关系，并将 &lt;code&gt;docker-compose-plugin&lt;/code&gt; 一并安装。&lt;/p&gt;
&lt;p&gt;到这一步直接使用&lt;code&gt;docker compose version&lt;/code&gt;验证是否安装成功。&lt;/p&gt;
&lt;h4 class="heading" id="下载-docker-compose-插件"&gt;
 下载 Docker Compose 插件
 &lt;a class="anchor" href="#%e4%b8%8b%e8%bd%bd-docker-compose-%e6%8f%92%e4%bb%b6"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;从 GitHub Releases 下载 Docker Compose 插件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt install docker-compose-plugin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 class="heading" id="验证-docker-compose-安装"&gt;
 验证 Docker Compose 安装
 &lt;a class="anchor" href="#%e9%aa%8c%e8%af%81-docker-compose-%e5%ae%89%e8%a3%85"&gt;#&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;验证 Docker Compose 是否成功安装。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;docker compose version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果 Docker Compose 成功安装，应该看到 Docker Compose 的版本信息。&lt;/p&gt;
&lt;h3 class="heading" id="添加用户到-docker-用户组"&gt;
 添加用户到 Docker 用户组
 &lt;a class="anchor" href="#%e6%b7%bb%e5%8a%a0%e7%94%a8%e6%88%b7%e5%88%b0-docker-%e7%94%a8%e6%88%b7%e7%bb%84"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;默认情况下，只有 &lt;code&gt;root&lt;/code&gt; 用户或具有 &lt;code&gt;sudo&lt;/code&gt; 权限的用户才能运行 Docker 命令。为了让普通用户也能运行 Docker 命令，你需要将用户添加到 &lt;code&gt;docker&lt;/code&gt; 用户组。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo usermod -aG docker &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$USER&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行以下命令来应用用户组更改。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;newgrp docker
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就可以在不使用 &lt;code&gt;sudo&lt;/code&gt; 的情况下运行 Docker 命令了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 class="heading" id="配置证书和反代"&gt;
 配置证书和反代
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%ae%e8%af%81%e4%b9%a6%e5%92%8c%e5%8f%8d%e4%bb%a3"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;h3 class="heading" id="下载证书和私钥"&gt;
 下载证书和私钥
 &lt;a class="anchor" href="#%e4%b8%8b%e8%bd%bd%e8%af%81%e4%b9%a6%e5%92%8c%e7%a7%81%e9%92%a5"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;将在cf中生成的源证书的cert和key复制到.pem和.key文件中&lt;/p&gt;
&lt;p&gt;











&lt;figure class=""&gt;

 &lt;div class="img-container" &gt;
 &lt;img loading="lazy" alt="20250717203617645" src="https://webp.050612.xyz/2025/07/20250717203617645.png" &gt;
 &lt;/div&gt;

 
&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 class="heading" id="安装-nginx"&gt;
 安装 nginx
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85-nginx"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt install nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 class="heading" id="上传证书和私钥到服务器"&gt;
 上传证书和私钥到服务器
 &lt;a class="anchor" href="#%e4%b8%8a%e4%bc%a0%e8%af%81%e4%b9%a6%e5%92%8c%e7%a7%81%e9%92%a5%e5%88%b0%e6%9c%8d%e5%8a%a1%e5%99%a8"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;以下操作建议提权为root进行操作和检查&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用su，输入root密码提权&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;su
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="2"&gt;
&lt;li&gt;检查 &lt;code&gt;/etc/ssl/certs&lt;/code&gt;和&lt;code&gt;/etc/ssl/private&lt;/code&gt;目录是否存在，并将.pem和.key文件分别传到这两个目录里&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo mv xxx.com.pem /etc/ssl/certs/
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo mv xxx.com.key /etc/ssl/private/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="3"&gt;
&lt;li&gt;设置权限&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; sudo chmod 600 /etc/ssl/private/api.xxx.com.key
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class="heading" id="配置nginx"&gt;
 配置nginx
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%aenginx"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;创建 Nginx 配置文件&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo vim /etc/nginx/sites-available/api.xxx.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="2"&gt;
&lt;li&gt;&lt;strong&gt;添加以下配置&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-txt" data-lang="txt"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;server {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; listen 80;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; server_name api.xxx.com;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; return 301 https://$host$request_uri;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;server {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; listen 443 ssl;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; server_name api.xxx.com;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ssl_certificate /etc/ssl/certs/api.xxx.com.pem;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ssl_certificate_key /etc/ssl/private/api.xxx.com.key;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ssl_protocols TLSv1.2 TLSv1.3; # 根据需要调整
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ssl_ciphers HIGH:!aNULL:!MD5; # 根据需要调整
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; client_max_body_size 100m;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; location / {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; proxy_pass http://127.0.0.1:5005; # 替换为你的 chat2api 服务监听的地址和端口
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; proxy_set_header Host $host;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; proxy_set_header X-Real-IP $remote_addr;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; proxy_set_header X-Forwarded-Proto $scheme;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server_name&lt;/code&gt;：设置为 &lt;code&gt;api.xxx.com&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_certificate&lt;/code&gt;：指向&lt;code&gt;.pem&lt;/code&gt;证书文件的路径。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_certificate_key&lt;/code&gt;：指向&lt;code&gt;.key&lt;/code&gt;私钥文件的路径。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proxy_pass&lt;/code&gt;：设置为`服务监听的地址和端口&lt;/li&gt;
&lt;li&gt;第一个 &lt;code&gt;server&lt;/code&gt; 块用于将 HTTP 请求重定向到 HTTPS&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="3"&gt;
&lt;li&gt;&lt;strong&gt;启用 Nginx 配置&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;创建软链接到 &lt;code&gt;sites-enabled&lt;/code&gt; 目录：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ln -s /etc/nginx/sites-available/api.vtofun.me /etc/nginx/sites-enabled/api.vtofun.me
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;移除默认的 Nginx 配置：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo rm /etc/nginx/sites-enabled/default
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;测试 Nginx 配置：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo nginx -t
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;重启 Nginx 服务：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl restart nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 class="heading" id="swap-空间配置"&gt;
 Swap 空间配置
 &lt;a class="anchor" href="#swap-%e7%a9%ba%e9%97%b4%e9%85%8d%e7%bd%ae"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;h3 class="heading" id="创建swap空间"&gt;
 创建swap空间
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%baswap%e7%a9%ba%e9%97%b4"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;检查 Swap 空间：
首先，检查系统当前是否已经配置了 Swap 空间：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;free -h
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="2"&gt;
&lt;li&gt;创建 Swap 文件：
使用 &lt;code&gt;fallocate&lt;/code&gt; 命令创建一个 Swap 文件。例如，创建一个 2GB 的 Swap 文件：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo fallocate -l 2G /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者，你也可以使用 &lt;code&gt;dd&lt;/code&gt; 命令创建 Swap 文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo dd &lt;span style="font-weight:bold;text-decoration:underline"&gt;if&lt;/span&gt;=/dev/zero &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;of&lt;/span&gt;=/swapfile &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;bs&lt;/span&gt;=1M &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;count&lt;/span&gt;=2048
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将创建一个名为 &lt;code&gt;/swapfile&lt;/code&gt;，大小为 2GB 的文件。可以根据需要调整 &lt;code&gt;count&lt;/code&gt; 的值来改变 Swap 文件的大小。
3. 设置 Swap 文件权限：&lt;/p&gt;
&lt;p&gt;为了安全起见，设置 Swap 文件的权限，只允许 root 用户读写：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo chmod 600 /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="4"&gt;
&lt;li&gt;格式化为 Swap 空间：
使用 &lt;code&gt;mkswap&lt;/code&gt; 命令将文件格式化为 Swap 空间：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo mkswap /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="5"&gt;
&lt;li&gt;启用 Swap 空间：
使用 &lt;code&gt;swapon&lt;/code&gt; 命令启用 Swap 空间：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo swapon /swapfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="6"&gt;
&lt;li&gt;验证 Swap 空间：
再次使用 &lt;code&gt;free -h&lt;/code&gt; 命令验证 Swap 空间是否已启用：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;free -h
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;应该能看到 &lt;code&gt;Swap&lt;/code&gt; 那一行显示了你刚刚配置的 Swap 空间大小。&lt;/p&gt;
&lt;ol start="7"&gt;
&lt;li&gt;设置开机自动挂载 Swap 空间：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了使 Swap 空间在系统重启后仍然有效，需要将其添加到 &lt;code&gt;/etc/fstab&lt;/code&gt; 文件中。使用文本编辑器打开该文件：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo vim /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在文件末尾添加以下一行：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;/swapfile swap swap defaults 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;ol start="8"&gt;
&lt;li&gt;调整 Swappiness 值（可选）：
&lt;code&gt;swappiness&lt;/code&gt; 参数控制内核使用 Swap 空间的积极程度。默认值通常是 60。对于服务器，你可能希望降低这个值，以便系统更倾向于使用物理内存，只有在必要时才使用 Swap 空间。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;查看当前的 &lt;code&gt;swappiness&lt;/code&gt; 值：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;cat /proc/sys/vm/swappiness
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;临时修改 &lt;code&gt;swappiness&lt;/code&gt; 值（例如设置为 10）：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo sysctl vm.swappiness=10
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;永久修改 &lt;code&gt;swappiness&lt;/code&gt; 值，编辑 &lt;code&gt;/etc/sysctl.conf&lt;/code&gt; 文件：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo nano /etc/sysctl.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在文件末尾添加或修改以下行：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;vm.swappiness=10
&lt;/code&gt;&lt;/pre&gt;&lt;h3 class="heading" id="停用swap空间"&gt;
 停用swap空间
 &lt;a class="anchor" href="#%e5%81%9c%e7%94%a8swap%e7%a9%ba%e9%97%b4"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;关闭 Swap 空间：
使用 &lt;code&gt;swapoff&lt;/code&gt; 命令关闭指定的 Swap 空间。如果你的 Swap 空间是基于文件的（如前面示例中的 &lt;code&gt;/swapfile&lt;/code&gt;），可以使用以下命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo swapoff /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不确定 Swap 分区的路径，可以使用 &lt;code&gt;swapon --show&lt;/code&gt; 或 &lt;code&gt;free -h&lt;/code&gt; 命令查看。&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;删除 Swap 文件（可选）：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo rm /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;ol start="3"&gt;
&lt;li&gt;编辑 &lt;code&gt;/etc/fstab&lt;/code&gt; 文件：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了防止系统在重启后自动挂载 Swap 空间，需要从 &lt;code&gt;/etc/fstab&lt;/code&gt; 文件中删除或注释掉相关的条目。&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo vim /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;找到包含 &lt;code&gt;/swapfile&lt;/code&gt; 的那一行：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;/swapfile swap swap defaults 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;删除这一行，或者在行首添加 &lt;code&gt;#&lt;/code&gt; 将其注释掉：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;#/swapfile swap swap defaults 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;ol start="4"&gt;
&lt;li&gt;验证 Swap 空间是否已停用：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用 &lt;code&gt;free -h&lt;/code&gt; 命令验证 Swap 空间是否已停用：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;free -h
&lt;/code&gt;&lt;/pre&gt;</description></item><item><title>VPS基础安全配置实践指南</title><link>https://blog.yzyy.de/explore/%E6%9C%8D%E5%8A%A1%E5%99%A8/vps%E5%9F%BA%E6%9C%AC%E5%AE%89%E5%85%A8%E6%8E%AA%E6%96%BD/</link><pubDate>Wed, 10 Apr 2024 00:00:00 +0000</pubDate><guid>https://blog.yzyy.de/explore/%E6%9C%8D%E5%8A%A1%E5%99%A8/vps%E5%9F%BA%E6%9C%AC%E5%AE%89%E5%85%A8%E6%8E%AA%E6%96%BD/</guid><description>&lt;p&gt;本文基于 &lt;code&gt;@Raven95676&lt;/code&gt; 的原帖，并结合我的个人使用习惯进行了定制化整理，作为自己的操作备忘录。&lt;/p&gt;
&lt;p&gt;原帖地址：&lt;a href="https://linux.do/t/topic/267502"&gt;VPS基本安全措施&lt;/a&gt;&lt;/p&gt;
&lt;h1 class="heading" id="前言"&gt;
 前言
 &lt;a class="anchor" href="#%e5%89%8d%e8%a8%80"&gt;#&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;随着逐渐看到一些「Self Host」的服务，拥有一台属于自己的服务器的想法越来越强烈。终于，在24年的一次促销中，买到了第一台具有公网IP的小机器，1c1g。&lt;/p&gt;
&lt;p&gt;拿到了机器，开机之后意味着暴露在了互联网中。在互联网中，每时每刻都有无数的恶意流量发出。我们需要做什么呢？&lt;/p&gt;
&lt;p&gt;如果选择将网站 / 服务放在知名厂商虚拟主机上，虚拟主机的厂商会负责基本的服务器安全措施。但如果放在 VPS 上，那么你就是服务器的安全负责人了。更多的权限代表着更多的义务，VPS 在具有更高的自由度的情况下自然有更高的风险。&lt;strong&gt;而我们要做到的不是绝对安全，而是比大多数人安全。&lt;/strong&gt; 只要做到没那么容易被攻破那就是胜利。&lt;/p&gt;
&lt;h2 class="heading" id="安全管理系统"&gt;
 安全管理系统
 &lt;a class="anchor" href="#%e5%ae%89%e5%85%a8%e7%ae%a1%e7%90%86%e7%b3%bb%e7%bb%9f"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;有些 VPS 厂商默认提供的是 root 账户。众所周知，root 账户拥有整个系统最高的权限，这么高的权限自然是不安全的。正确的做法是创建一个非 root 账户，在必须使用 root 权限时使用 sudo 提权。&lt;/p&gt;
&lt;h3 class="heading" id="创建非-root-账户"&gt;
 创建非 root 账户
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%ba%e9%9d%9e-root-%e8%b4%a6%e6%88%b7"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;使用以下命令创建一个具有提权能力的账户：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;useradd -m -G sudo -s /bin/bash 用户名
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;useradd&lt;/code&gt;:&lt;/strong&gt; 这是一个用于创建新用户的命令。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-m&lt;/code&gt;:&lt;/strong&gt; 此选项会在 &lt;code&gt;/home&lt;/code&gt; 目录下为新用户创建主目录。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-G sudo&lt;/code&gt;:&lt;/strong&gt; 此选项将新用户添加到 &lt;code&gt;sudo&lt;/code&gt; 组，允许其使用 &lt;code&gt;sudo&lt;/code&gt; 命令执行管理员操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;-s /bin/bash&lt;/code&gt;:&lt;/strong&gt; 此选项指定新用户的默认 shell 为 &lt;code&gt;/bin/bash&lt;/code&gt;（常用 shell）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;用户名&lt;/code&gt;:&lt;/strong&gt; 这是你要创建的新用户的用户名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后我们给这个用户设置一个至少为 16 位的随机大小写字母 + 数字的密码：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code class="language-undefined" data-lang="undefined"&gt;passwd 用户名
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;建议把 root 用户的密码也改掉，云服务器的默认密码强度还是差点，而且有些服务商会通过邮件来发送默认密码，不太安全。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 class="heading" id="禁用-root-ssh-密码登陆"&gt;
 禁用 root SSH 密码登陆
 &lt;a class="anchor" href="#%e7%a6%81%e7%94%a8-root-ssh-%e5%af%86%e7%a0%81%e7%99%bb%e9%99%86"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;先不提 root 登录本身就是危险的行为，root 账户的用户名固定为”root”，如果允许其通过密码登录，攻击者只需进行密码穷举即可尝试攻破系统。之前我们已经创建了非 root 账户，在这里我们只需要禁用非 root 账户的 SSH 登录即可。&lt;/p&gt;
&lt;p&gt;执行以下命令编辑 SSH 配置文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo vim /etc/ssh/sshd_config
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进行如下设置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 禁止 Root 用户通过密码远程登录 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;PermitRootLogin prohibit-password
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看&lt;code&gt;/etc/ssh/sshd_config.d/&lt;/code&gt;目录下有无其他配置文件，防止不生效。有些厂商的初始镜像内已经有了一些配置会覆盖掉我们编写的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ls /etc/ssh/sshd_config.d/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后重启 SSH 服务生效：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl restart ssh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为什么不设置成 no：&lt;/p&gt;
&lt;p&gt;庄 sir:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;另，直接禁掉 root 登录 &lt;code&gt;PermitRootLogin no&lt;/code&gt; 我也不常用，更习惯和其他 sudoer 一样配密钥然后禁止密码登录仅允许密钥登录。我是一般能操做线下集群的机子才会这么配，不然出个故障没 root 用不了了，比如存储满了远程 ssh session 都建立不了。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Oganneson:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;理论上 PermitRootLogin 是好的，但在服务器寄掉需要救援时就会变麻烦，我其实更推荐只关闭远程密码登录，保留本地密码登录，出问题时可以通过 vnc 或者 ipmi 本地登录 root 进行救援。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 class="heading" id="修改-ssh-端口号"&gt;
 修改 SSH 端口号
 &lt;a class="anchor" href="#%e4%bf%ae%e6%94%b9-ssh-%e7%ab%af%e5%8f%a3%e5%8f%b7"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;登上去第一件事就是改 SSHD 的 端口并修改防火墙，22 全是猜密码的请求。&lt;br&gt;
有个小技巧，就是改端口并重启 sshd 后当前的连接并没有断，新建一个终端使用新端口发请求，能连上就是修改正确，要是不能建立新连接，还可以改回来，或查下防火墙的配置。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;正常情况下，直接通过 &lt;code&gt;sudo vim /etc/ssh/sshd_config&lt;/code&gt; 修改 SSH 端口，然后再使用 &lt;code&gt;sudo systemctl restart ssh.service&lt;/code&gt; 重启 SSH 服务应用更改是可行的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 设置 SSH端口 Port 自拟&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Port 20251
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是在 &lt;strong&gt;Ubuntu 22.10 或更高版本&lt;/strong&gt;中各位可能发现这是&lt;strong&gt;无效&lt;/strong&gt;的，各位会发现 SSH 服务在重启后依然监听原端口。&lt;/p&gt;
&lt;p&gt;因为在 Ubuntu 22.10 或更高版本中，ssh 默认通过套接字激活。&lt;/p&gt;
&lt;p&gt;在 Ubuntu 22.10、Ubuntu 23.04 和 Ubuntu 23.10 中进行修改的方法是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo mkdir -p /etc/systemd/system/ssh.socket.d
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo vim /etc/systemd/system/ssh.socket.d/listen.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl daemon-reload
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl restart ssh.socket
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl restart ssh.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;listen.conf 的参考配置为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-ini" data-lang="ini"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;text-decoration:underline"&gt;[Socket]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ListenStream=
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ListenStream=&lt;span style="color:#666;font-style:italic"&gt;2233&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 Ubuntu 24.04 中进行修改的方法是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo vim /etc/ssh/sshd_config
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl daemon-reload
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl restart ssh.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果不在乎通过套接字激活节省的内存，可以通过以下命令恢复到非套接字激活：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;警告：&lt;/strong&gt; 务必确认配置文件正常。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl disable --now ssh.socket
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl &lt;span style="font-weight:bold;font-style:italic"&gt;enable&lt;/span&gt; --now ssh.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如有配置迁移（Ubuntu 22.10 及以上，Ubuntu 24.04 以下）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl disable --now ssh.socket
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rm -f /etc/systemd/system/ssh.service.d/00-socket.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rm -f /etc/systemd/system/ssh.socket.d/addresses.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl daemon-reload
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl &lt;span style="font-weight:bold;font-style:italic"&gt;enable&lt;/span&gt; --now ssh.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 class="heading" id="fail2ban-防暴力破解-ssh-配置ssh-ip白名单"&gt;
 Fail2ban 防暴力破解 SSH 配置SSH ip白名单
 &lt;a class="anchor" href="#fail2ban-%e9%98%b2%e6%9a%b4%e5%8a%9b%e7%a0%b4%e8%a7%a3-ssh-%e9%85%8d%e7%bd%aessh-ip%e7%99%bd%e5%90%8d%e5%8d%95"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;执行以下命令安装 Fail2ban：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt install fail2ban
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装完成后 Fail2ban会自动运行，可以检查一下服务状态&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl status fail2ban
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果为dead，注意开启fail2ban服务&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl start fail2ban
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;官方推荐的做法是利用 jail.local 来进行自定义设置：
这样做的好处是，在升级 Fail2ban 时，你的自定义配置不会丢失。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo vim /etc/fail2ban/jail.local
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以参照以下配置文件来进行自己的配置（记得删注释）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-ini" data-lang="ini"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;text-decoration:underline"&gt;[sshd]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ignoreip = &lt;span style="color:#666;font-style:italic"&gt;127.0.0.1/8 # 白名单，知道自己的固定公网ip网段可以配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;enabled = &lt;span style="color:#666;font-style:italic"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;filter = &lt;span style="color:#666;font-style:italic"&gt;sshd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;port = &lt;span style="color:#666;font-style:italic"&gt;22 # 端口，改了的话这里也要改&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;maxretry = &lt;span style="color:#666;font-style:italic"&gt;5 # 最大尝试次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;findtime = &lt;span style="color:#666;font-style:italic"&gt;300 # 多少秒以内最大尝试次数规则生效&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;bantime = &lt;span style="color:#666;font-style:italic"&gt;600 # 封禁多少秒，-1是永久封禁（不建议永久封禁）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;action = &lt;span style="color:#666;font-style:italic"&gt;%(action_)s[port=&amp;#34;%(port)s&amp;#34;, protocol=&amp;#34;%(protocol)s&amp;#34;, logpath=&amp;#34;%(logpath)s&amp;#34;, chain=&amp;#34;%(chain)s&amp;#34;] # 不需要发邮件通知就这样设置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;banaction = &lt;span style="color:#666;font-style:italic"&gt;iptables-multiport # 禁用方式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;logpath = &lt;span style="color:#666;font-style:italic"&gt;/var/log/auth.log # SSH 登陆日志位置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;直接复制版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;[sshd]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;ignoreip&lt;/span&gt; = 127.0.0.1/8
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;enabled&lt;/span&gt; = &lt;span style="font-weight:bold;font-style:italic"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;filter&lt;/span&gt; = sshd
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;port&lt;/span&gt; = 20253
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;maxretry&lt;/span&gt; = 5 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;findtime&lt;/span&gt; = 300 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;bantime&lt;/span&gt; = 600
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;action&lt;/span&gt; = %(action_)s[&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;port&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;%(port)s&amp;#34;&lt;/span&gt;, &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;protocol&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;%(protocol)s&amp;#34;&lt;/span&gt;, &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;logpath&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;%(logpath)s&amp;#34;&lt;/span&gt;, &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;chain&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;%(chain)s&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;banaction&lt;/span&gt; = iptables-multiport
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;logpath&lt;/span&gt; = /var/log/auth.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;设置fail2ban开机自动启动：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl &lt;span style="font-weight:bold;font-style:italic"&gt;enable&lt;/span&gt; fail2ban
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 class="heading" id="使用密钥登录"&gt;
 使用密钥登录
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e5%af%86%e9%92%a5%e7%99%bb%e5%bd%95"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;如果 VPS 厂商提供了 SSH 密钥绑定功能，可以忽略本节内容并按照 VPS 厂商提供的方法绑定。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;在本地 powershell 中运行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ssh-keygen -t ed25519
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ssh-keygen -t rsa -b 4096
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;二者加密算法不同:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-b 4096&lt;/code&gt; 指定生成的 RSA 密钥的长度为 4096 位&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ed25519 的密钥长度固定，约为 256 位，无需指定密钥长度。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接使用默认的密钥路径即可。密码可以留空，也可以设置。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-php" data-lang="php"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Generating &lt;span style="font-weight:bold;text-decoration:underline"&gt;public&lt;/span&gt;/&lt;span style="font-weight:bold;text-decoration:underline"&gt;private&lt;/span&gt; ed25519 key pair.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Enter file in which to save the key (C:\Users\&amp;lt;user&amp;gt;/.ssh/id_ed25519): &lt;span style="color:#888;font-style:italic"&gt;# 直接回车
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt;Enter passphrase (&lt;span style="font-weight:bold;text-decoration:underline"&gt;empty&lt;/span&gt; &lt;span style="font-weight:bold;text-decoration:underline"&gt;for&lt;/span&gt; no passphrase): &lt;span style="color:#888;font-style:italic"&gt;# 可以留空，也可以设置
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;&lt;/span&gt;Enter same passphrase again: &lt;span style="color:#888;font-style:italic"&gt;# 和上一个一样
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后我们在 VPS 上编辑 SSH 授权密钥文件，注意需要在root用户和非root用户下都需要添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;vim ~/.ssh/authorized_keys
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;如果目标用户的家目录下还没有 &lt;code&gt;.ssh&lt;/code&gt; 目录， 确保目录的权限是 &lt;code&gt;700&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;mkdir -p ~/.ssh
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;chmod 700 ~/.ssh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建&lt;code&gt;authorized_keys&lt;/code&gt;文件并赋予相应权限&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;touch ~/.ssh/authorized_keys
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;chmod 600 ~/.ssh/authorized_keys
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后打开 &lt;code&gt;C:\\\Users&amp;lt;user\&amp;gt;/.ssh/id\_ed25519.pub&lt;/code&gt;，复制其内容并粘贴过去。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;执行以下命令编辑 SSH 配置文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo vim /etc/ssh/sshd_config
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进行如下设置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;PubkeyAuthentication yes
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;AuthorizedKeysFile .ssh/authorized_keys
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;PasswordAuthentication no
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果发现没有生效：
检查 &lt;code&gt;/etc/ssh/sshd_config.d&lt;/code&gt;下的文件&lt;/p&gt;
&lt;p&gt;之后重启 SSH 服务生效：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo systemctl restart ssh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 class="heading" id="启用-ufw-防火墙"&gt;
 启用 UFW 防火墙
 &lt;a class="anchor" href="#%e5%90%af%e7%94%a8-ufw-%e9%98%b2%e7%81%ab%e5%a2%99"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;如果 VPS 厂商提供了防火墙功能，且没有复杂的需求，可以忽略本节内容并使用 VPS 厂商提供的防火墙。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;在正式启用 UFW 之前，我们需要先设置规则。我们首先来设置 UFW 的默认行为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw default allow outgoing &lt;span style="color:#888;font-style:italic"&gt;# 默认允许所有数据出站&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw default deny incoming &lt;span style="color:#888;font-style:italic"&gt;# 默认禁止所有数据入站&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们可以通过以下命令查看 UFW 当前生效的规则：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw status
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw status numbered &lt;span style="color:#888;font-style:italic"&gt;# 加上数字编号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们可以通过以下命令允许或拒绝某端口的传入 / 传出流量（部分以 22、80、443 端口为例）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 允许22端口的proto协议的流量入站&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw allow in 22/proto
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;#允许22端口的proto协议的流量出站&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw allow out 22/proto
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 在未指定in/out的情况下，默认为in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw allow 22/proto
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 在未指定proto的情况下，默认为tcp和udp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw allow 22
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 拒绝的话就把allow改成deny&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw deny 22
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 允许从start_port到end_port的端口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw allow start_port:end_port
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 允许复数个端口，以英文逗号分隔&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw allow port1,port2
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 允许来自于特定ip或cidr段的流量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw allow from ip/cidr
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 允许来自于特定ip或cidr段端口22的流量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw allow from ip/cidr to any port 22
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 允许来自于特定ip或cidr段端口22的tcp协议的流量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw allow from ip/cidr to any proto tcp port 22
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# 如果指定复数个端口，则必须指定协议&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw allow from ip to any proto tcp port 80,443
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# comment用于注释&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw allow from ip to any proto tcp port 80,443 comment &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们可以通过以下命令删除生效的规则：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw delete allow 22 &lt;span style="color:#888;font-style:italic"&gt;# 在规则前面加个delete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw delete 1 &lt;span style="color:#888;font-style:italic"&gt;# 按照numbered的编号删除也行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在确定所有规则均成功设置后，通过以下命令启动 \ 关闭 \ 重启 UFW&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;启动防火墙前务必保证 22 端口（或者其他 SSH 端口）被放行。&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw enable|disable|reload
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果需要重置规则，请使用：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;重置规则前务必保证 UFW 处于关闭状态。&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ufw reset
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;本人建议仅放行正在使用的端口，比如 22、80、443。&lt;/p&gt;
&lt;p&gt;默认情况下，UFW 仅记录不符合规则的被拒绝的数据包。如果需要记录与该服务相关的每个详细信息，可以在 allow 后加上 log 以进行记录。&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;# 成功连接 ssh 的也记一下日志备查比较好 ufw allow log 22/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;h2 class="heading" id="更改时区"&gt;
 更改时区
 &lt;a class="anchor" href="#%e6%9b%b4%e6%94%b9%e6%97%b6%e5%8c%ba"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo timedatectl set-timezone Asia/Shanghai
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class="heading" id="保证软件更新"&gt;
 保证软件更新
 &lt;a class="anchor" href="#%e4%bf%9d%e8%af%81%e8%bd%af%e4%bb%b6%e6%9b%b4%e6%96%b0"&gt;#&lt;/a&gt;
&lt;/h2&gt;
&lt;h3 class="heading" id="日常更新系统"&gt;
 日常更新系统
 &lt;a class="anchor" href="#%e6%97%a5%e5%b8%b8%e6%9b%b4%e6%96%b0%e7%b3%bb%e7%bb%9f"&gt;#&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;个人建议定期登录 VPS 运行 &lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&lt;/code&gt; 来保证 VPS 内所有软件包均为最新。&lt;/p&gt;
&lt;p&gt;不过 Ubuntu 默认会每天自动安装系统的安全更新，所以说这个频率没必要太勤。&lt;/p&gt;</description></item></channel></rss>